name: DataGen
on:
  push:
    # Be sure to set "branches" to the branch where a push will trigger the example file creation 
    branches: 
      - main
env:
  # CONFIG_DIR is the directory where the Bento Data Generator configuration file lives
  CONFIG_DIR: ./AutoGenerateExample/datagen_configs
  # CONFIG_FILE is the Bento Data Generator configuration file name
  CONFIG_FILE: datagen_config_1.yml
  # WORKING DIR is where GitHub Actions does its work.  This doesn't need to be changed, but can be
  WORKING_DIR: ./AutoGenerateExample
  # DESTINATION_DIR is the repository directory where you want the completed example files placed
  DESTINATION_DIR: example_loadsheets
  # REPOSITORY is the data model repository
  REPOSITORY:  pihltd/AutoGenerateExample
  # ZIP_FILE is the name for the zip archive
  ZIP_FILE: ExampleSubmissionSheets
  # The next two entries are the commiter name and email (Required by GitHub)
  USER_NAME: 'Todd Pihl'
  USER_EMAIL: 'todd.pihl@gmail.com'
  # The commit message
  COMMIT: "Automated Submission Example Generation"
  ############################################################################
  #
  # Below this point you only need to change the "uses" for Checkout data model.
  # And then, only if you are using a branch other than @main (line 51)
  #
  ############################################################################

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout data generator
        uses: actions/checkout@main
        with:
          repository: CBIIT/bento-data-generator
          path: ./bento-data-generator
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./bento-data-generator/requirements.txt
      - name: Checkout bento common
        uses: actions/checkout@master
        with:
          repository: CBIIT/bento-common
          path: ./bento-data-generator/bento
      - name: Checkout data model
        uses: actions/checkout@main
        with:
          repository: ${{ env.REPOSITORY }}
          path: ${{ env.WORKING_DIR }}
      - name: Delete everything in the destination directory
        run: rm $WORKING_DIR/$DESTINATION_DIR/* && ls -al ./$WORKING_DIR/$DESTINATION_DIR/
      - name: Run data generator
        run: python ./bento-data-generator/bento-synthetic-data-generator.py $CONFIG_DIR/$CONFIG_FILE
      - name:  Zip the generated files
        run: zip -r $WORKING_DIR/$DESTINATION_DIR/$ZIP_FILE.zip . --junk-paths --include  $WORKING_DIR/*.tsv
      - name: Commit and push
        run: |
          git config --global user.name "$USER_NAME"
          git config --global user.email "$USER_EMAIL"
          ls ./$DESTINATION_DIR/
          git add ./$DESTINATION_DIR/$ZIP_FILE.zip
          git commit -m "$COMMIT"
          git push
        working-directory: ${{ env.WORKING_DIR }}
    